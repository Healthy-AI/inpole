#!/usr/bin/env bash
#SBATCH -A <ACCOUNT>
#SBATCH -p alvis
#SBATCH -N 1
#SBATCH --gpus-per-node=<GPU>:1
#SBATCH -t 5-0:0  # days-hours:minutes
#SBATCH --output=<EXPERIMENT_PATH>/logs/%x_%A_%a.out

experiment_path='<EXPERIMENT_PATH>'
estimator='<ESTIMATOR>'
container_path='<CONTAINER_PATH>'

if [ -z $SLURM_ARRAY_TASK_ID ]
then
  config_number='001'
else
  config_number=$(printf '%03d' $SLURM_ARRAY_TASK_ID)
fi
config_path="${experiment_path}/configs/${estimator}/config${config_number}.yaml"

cd ~
rsync -r inpole $TMPDIR --exclude='*_env'
cd $TMPDIR/inpole

module purge
apptainer exec --bind $TMPDIR:/mnt --nv $container_path python scripts/train_predict.py \
  --config_path $config_path --estimator $estimator

# Copy log file to experiment folder.
if [ $SLURM_ARRAY_JOB_ID ]
then
  log_path="${experiment_path}/logs/"
  log_path+="${SLURM_JOB_NAME}_${SLURM_ARRAY_JOB_ID}_${SLURM_ARRAY_TASK_ID}.out"
  get_results_path() {
      cmd="import amhelpers.config_parsing as cp;"
      cmd+="print(cp.load_config('$1')['results']['path'])"
      apptainer exec $container_path python -c "$cmd"
  }
  results_path=$(get_results_path $config_path)
  cp $log_path $results_path
fi
